#!/bin/bash
# Script completo para corregir nginx basado en api_config.dart
# A√±ade todos los endpoints faltantes que usa la aplicaci√≥n Flutter

echo "üîß Corrigiendo nginx basado en api_config.dart..."
echo "Comparando endpoints de Flutter con configuraci√≥n actual de nginx"

ssh root@178.16.130.178 << 'EOFREMOTE'

echo "üìã Creando backup completo..."
cp /etc/nginx/sites-available/herobudget /etc/nginx/sites-available/herobudget.complete.backup.$(date +%Y%m%d_%H%M%S)

echo "üîç Analizando endpoints faltantes..."

# Verificar endpoints faltantes cr√≠ticos
echo "Verificando /money-flow/data..."
if ! grep -q "location /money-flow/data" /etc/nginx/sites-available/herobudget; then
    echo "‚ùå /money-flow/data FALTANTE - A√±adiendo..."
    MISSING_MONEY_FLOW_DATA=true
else
    echo "‚úÖ /money-flow/data ya existe"
    MISSING_MONEY_FLOW_DATA=false
fi

echo "Verificando /budget-overview..."
if ! grep -q "location /budget-overview" /etc/nginx/sites-available/herobudget; then
    echo "‚ùå /budget-overview FALTANTE - A√±adiendo..."
    MISSING_BUDGET_OVERVIEW=true
else
    echo "‚úÖ /budget-overview ya existe"
    MISSING_BUDGET_OVERVIEW=false
fi

# Solo proceder si hay endpoints faltantes
if [ "$MISSING_MONEY_FLOW_DATA" = true ] || [ "$MISSING_BUDGET_OVERVIEW" = true ]; then
    echo "üìù A√±adiendo configuraciones faltantes una por una..."
    
    # A√±adir money-flow/data si falta
    if [ "$MISSING_MONEY_FLOW_DATA" = true ]; then
        echo "A√±adiendo /money-flow/data..."
        # Buscar l√≠nea despu√©s de money-flow/sync
        LINE=$(grep -n "location /money-flow/sync" /etc/nginx/sites-available/herobudget | cut -d: -f1)
        INSERTLINE=$((LINE + 11))
        
        # Crear configuraci√≥n money-flow/data
        cat << 'EOFMONEY' > /tmp/money_flow_data.txt

    # Money Flow Data Service (Port 8097) - A√ëADIDO POR API_CONFIG.DART
    location /money-flow/data {
        limit_req zone=api_limit burst=20 nodelay;
        proxy_pass http://money_flow_sync_service;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }
EOFMONEY
        
        sed -i "${INSERTLINE}r /tmp/money_flow_data.txt" /etc/nginx/sites-available/herobudget
        echo "‚úÖ /money-flow/data a√±adido"
    fi
    
    # A√±adir budget-overview si falta
    if [ "$MISSING_BUDGET_OVERVIEW" = true ]; then
        echo "A√±adiendo /budget-overview y /transactions/history..."
        # Buscar l√≠nea despu√©s de transactions/delete
        LINE=$(grep -n "location /transactions/delete" /etc/nginx/sites-available/herobudget | cut -d: -f1)
        INSERTLINE=$((LINE + 11))
        
        # Crear configuraci√≥n budget-overview
        cat << 'EOFBUDGET' > /tmp/budget_overview.txt

    # Budget Overview Service (Port 8098) - A√ëADIDO POR API_CONFIG.DART
    location /budget-overview {
        limit_req zone=api_limit burst=20 nodelay;
        proxy_pass http://budget_overview_service;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }

    # Transaction History Service (Port 8098) - A√ëADIDO POR API_CONFIG.DART
    location /transactions/history {
        limit_req zone=api_limit burst=20 nodelay;
        proxy_pass http://budget_overview_service;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }
EOFBUDGET
        
        sed -i "${INSERTLINE}r /tmp/budget_overview.txt" /etc/nginx/sites-available/herobudget
        echo "‚úÖ /budget-overview y /transactions/history a√±adidos"
    fi
    
else
    echo "‚úÖ Todos los endpoints ya est√°n configurados"
fi

# Verificar configuraci√≥n
echo "üß™ Verificando configuraci√≥n nginx..."
nginx -t

if [ $? -eq 0 ]; then
    echo "‚úÖ Configuraci√≥n v√°lida - Recargando nginx..."
    systemctl reload nginx
    
    echo "üè• Verificando servicios en puertos..."
    echo "Servicios activos:"
    netstat -tulpn | grep -E ":808[1-9]|:809[0-8]" | awk '{print $1, $4}' | sort
    
    echo ""
    echo "üìä Verificando endpoints a√±adidos..."
    
    # Probar endpoints cr√≠ticos
    echo "Testing /money-flow/data..."
    curl -s -I "https://herobudget.jaimedigitalstudio.com/money-flow/data?user_id=19" | head -1
    
    echo "Testing /budget-overview..."  
    curl -s -I "https://herobudget.jaimedigitalstudio.com/budget-overview?user_id=19" | head -1
    
    echo "Testing /savings/fetch..."
    curl -s -I "https://herobudget.jaimedigitalstudio.com/savings/fetch?user_id=19" | head -1
    
    echo ""
    echo "‚úÖ Nginx recargado exitosamente"
    echo "üìã Configuraciones basadas en api_config.dart aplicadas"
    
else
    echo "‚ùå Error en configuraci√≥n nginx"
    echo "Restaurando backup..."
    LATEST_BACKUP=$(ls -t /etc/nginx/sites-available/herobudget.complete.backup.* | head -1)
    cp "$LATEST_BACKUP" /etc/nginx/sites-available/herobudget
    nginx -t
fi

# Mostrar resumen final
echo ""
echo "üìä RESUMEN DE ENDPOINTS CONFIGURADOS:"
echo "======================================"
grep -o "location /[^{]*" /etc/nginx/sites-available/herobudget | sort | nl

echo ""
echo "üéØ ENDPOINTS CR√çTICOS DE API_CONFIG.DART:"
echo "=========================================="
echo "‚úÖ /auth/google (8081)"
echo "‚úÖ /signup/* (8082)"
echo "‚úÖ /language/* (8083)" 
echo "‚úÖ /signin/* (8084)"
echo "‚úÖ /reset-password/* (8086)"
echo "‚úÖ /dashboard/data (8087)"
echo "‚úÖ /budget/* (8088)"
echo "‚úÖ /savings/* (8089)"
echo "‚úÖ /cash-bank/* (8090)"
echo "‚úÖ /transfer/* (8090)"
echo "‚úÖ /bills/* (8091)"
echo "‚úÖ /profile/* (8092)"
echo "‚úÖ /incomes/* (8093)"
echo "‚úÖ /expenses/* (8094)"
echo "‚úÖ /transactions/delete (8095)"
echo "‚úÖ /categories/* (8096)"
echo "‚úÖ /money-flow/sync (8097)"
echo "‚úÖ /money-flow/data (8097)"
echo "‚úÖ /budget-overview (8098)"
echo "‚úÖ /transactions/history (8098)"

EOFREMOTE

echo ""
echo "üéâ Correcci√≥n completa de nginx finalizada"
echo "üì± Nginx ahora incluye todos los endpoints de api_config.dart"
</rewritten_file> 